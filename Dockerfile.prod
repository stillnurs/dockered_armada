###########
# BUILDER #
###########

# pull official base image
FROM python:3.8.3-alpine as builder

# set work directory
WORKDIR /usr/src/armada

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev

# lint
RUN apk add jpeg-dev zlib-dev
RUN pip install --upgrade pip
RUN pip install flake8
COPY . .
RUN flake8 --ignore=E501,F401,F405,F403 .

# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/armada/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.8.3-alpine

# create directory for the armada user
RUN mkdir -p /home/armada

# create the armada user
RUN addgroup -S armada && adduser -S armada -G armada

# create the appropriate directories
ENV HOME=/home/armada
ENV ARMADA_HOME=/home/armada/web
RUN mkdir $ARMADA_HOME
RUN mkdir $ARMADA_HOME/staticfiles
WORKDIR $ARMADA_HOME

# install dependencies
RUN apk update && apk add libpq
RUN apk add jpeg-dev zlib-dev
COPY --from=builder /usr/src/armada/wheels /wheels
COPY --from=builder /usr/src/armada/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

# copy entrypoint-prod.sh
COPY ./entrypoint.prod.sh $ARMADA_HOME

# copy project
COPY . $ARMADA_HOME

# chown all the files to the armada user
RUN chown -R armada:armada $ARMADA_HOME

# change to the armada user
USER armada

# run entrypoint.prod.sh
ENTRYPOINT ["/home/armada/web/entrypoint.prod.sh"]